[{"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/index.js":"1","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/App.js":"2","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/reportWebVitals.js":"3","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/routes.js":"4","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/country.js":"5","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/home.js":"6","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/404.js":"7","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/loading/loading.js":"8","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/config.js":"9","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/navbar.js":"10","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/countries.js":"11","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/country-details.js":"12"},{"size":543,"mtime":1608625354589,"results":"13","hashOfConfig":"14"},{"size":613,"mtime":1617933707815,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608623872904,"results":"16","hashOfConfig":"14"},{"size":762,"mtime":1617945222194,"results":"17","hashOfConfig":"14"},{"size":1090,"mtime":1617937815092,"results":"18","hashOfConfig":"14"},{"size":3130,"mtime":1617945943137,"results":"19","hashOfConfig":"14"},{"size":563,"mtime":1617851149740,"results":"20","hashOfConfig":"14"},{"size":332,"mtime":1597129396212,"results":"21","hashOfConfig":"14"},{"size":272,"mtime":1617867987468,"results":"22","hashOfConfig":"14"},{"size":808,"mtime":1617866587635,"results":"23","hashOfConfig":"14"},{"size":792,"mtime":1617945619061,"results":"24","hashOfConfig":"14"},{"size":1812,"mtime":1617945882361,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8bnqs3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/index.js",[],["53","54"],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/App.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/reportWebVitals.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/routes.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/country.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/home.js",["55","56","57"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./loading/loading\";\nimport { Countries } from \"./countries\";\n\nimport { config } from \"../config\";\n\nexport const Home = () => {\n\n    const { countriesUrl, regionUrl, httpHeaders } = config;\n\n    const [loading, setLoading] = useState(false);\n    const [query, setQuery] = useState('');\n    const [region, setRegion] = useState('');\n    const [countries, setCountries] = useState([]);\n\n    const fetchCountries = async () => {\n        try {\n            setLoading(true);\n            const { data } = await axios.get(countriesUrl, httpHeaders);\n            setCountries([...data]);\n            setLoading(false);\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n        }\n    };\n\n    const filterRegion = async () => {\n        try {\n            if(region?.length) {\n                setLoading(true);\n                const { data } = await axios.get(`${regionUrl}${region.toLowerCase()}`, httpHeaders);\n                setCountries([...data]);\n                setLoading(false);\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n        }\n    };\n\n    const filterCountry = async () => {\n        try {\n            if(query?.length) {\n                setCountries([...countries?.filter(country => country?.name?.toLowerCase().includes(query.toLowerCase()))]);\n            } else {\n                setLoading(true);\n                const { data } = await axios.get(countriesUrl, httpHeaders);\n                setCountries([...data]);\n                setLoading(false);\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => fetchCountries(), []);\n\n    useEffect(() => filterRegion(), [region]);\n\n    useEffect(() => filterCountry(), [query]);\n\n    if(loading) return (<Loading />);\n\n    return (\n        <div className=\"bg-gray-100 dark:bg-gray-800 dark:text-white\">\n            <div className=\"container flex mx-auto my-16\">\n                <i className=\"fa fa-search my-auto -mr-9 z-10 pr-2 pl-3 py-5 rounded-md text-gray-400\"></i>\n                <input\n                    type=\"text\"\n                    value={ query }\n                    onChange={ event => setQuery(event.target.value) }\n                    placeholder=\"Type in country name\"\n                    className=\"dark:bg-gray-700 pl-10 p-2 shadow-md rounded-md w-1/3\"\n                />\n                <select onChange={ event => setRegion(event.target.value) } className=\"ml-auto my-2 p-2 shadow-md rounded-md font-medium bg-gray-700\">\n                    <option value=\"\">Filter by region</option>\n                    <option value=\"Africa\">Africa</option>\n                    <option value=\"Americas\">Americas</option>\n                    <option value=\"Asia\">Asia</option>\n                    <option value=\"Europe\">Europe</option>\n                    <option value=\"Oceania\">Oceania</option>\n                </select>\n            </div>\n\n            <Countries countries={ countries } />\n        </div>\n    );\n\n};\n","/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/404.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/loading/loading.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/config.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/navbar.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/countries.js",[],"/home/malaba/Documents/Projects/React/tailwind-countries-rest-api-app/src/components/country-details.js",["58"],"import { useLocation, useNavigate } from \"react-router-dom\";\n\nexport const CountryDetails = () => {\n\n    const { state } = useLocation();\n\n    const navigate = useNavigate();\n\n    return (\n        <div className=\"bg-gray-100 dark:bg-gray-800 dark:text-white\">\n            <div className=\"w-screen shadow-md py-6 px-3 bg-white dark:bg-gray-700 dark:text-white mb-16\">\n                <div className=\"container flex mx-auto\">\n                    <h1 className=\"\"></h1>\n                </div>\n            </div>\n            <div className=\"container mx-auto mb-16\">\n                <button onClick={ () => navigate(`/`) } className=\"px-8 py-2 bg-white text-gray-600 shadow-md rounded-lg dark:bg-gray-700 dark:text-white\">\n                    <i className=\"fa fa-arrow-left\"></i> Back\n                </button>\n            </div>\n            <div className=\"container flex mx-auto p-8 pl-0 pr-0\">\n               <img src={ state?.flag } alt={`Flag of ${state?.name}`} className=\"w-1/2 pr-8\" />\n                <div className=\"p-8 pl-0\">\n                    <h2 className=\"font-bold text-2xl mb-8\">{ state.name }</h2>\n                    <div className=\"grid grid-cols-2 gap-x-20 gap-y-4\">\n                        <p>Native name: <span className=\"dark:text-gray-400 text-gray-700 text-sm\"> { state?.nativeName }</span></p>\n                        <p>Population: <span className=\"dark:text-gray-400 text-gray-700 text-sm\"> { state?.population }</span></p>\n                        <p>Region: <span className=\"dark:text-gray-400 text-gray-700 text-sm\"> { state?.region }</span></p>\n                        <p>Top Level Domain<span className=\"dark:text-gray-400 text-gray-700 text-sm\"> { state?.topLevelDomain[0] }</span></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":59,"column":39,"nodeType":"65","endLine":59,"endColumn":41,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":61,"column":37,"nodeType":"65","endLine":61,"endColumn":45,"suggestions":"68"},{"ruleId":"63","severity":1,"message":"69","line":63,"column":38,"nodeType":"65","endLine":63,"endColumn":45,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":13,"column":21,"nodeType":"73","endLine":13,"endColumn":38},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCountries'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'filterRegion'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has a missing dependency: 'filterCountry'. Either include it or remove the dependency array.",["78"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [fetchCountries]",{"range":"85","text":"86"},"Update the dependencies array to be: [filterRegion, region]",{"range":"87","text":"88"},"Update the dependencies array to be: [filterCountry, query]",{"range":"89","text":"90"},[1783,1785],"[fetchCountries]",[1825,1833],"[filterRegion, region]",[1874,1881],"[filterCountry, query]"]